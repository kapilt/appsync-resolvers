
pool:
  vmImage: 'Ubuntu 16.04'


variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.12' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code

pr:
- master      


steps:
- task: GoTool@0
  inputs:
    version: '1.12.6'
  displayName: 'Set up the Go workspace'

- script: |
    curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(GOBIN) v1.17.1
    wget https://github.com/wata727/tflint/releases/download/v0.8.3/tflint_darwin_amd64.zip
    unzip tflint_darwin_amd64.zip
    chmod +x tflint
    mv tflint $(GOBIN)
    go get github.com/jstemmer/go-junit-report
    go get github.com/axw/gocov/gocov
    go get github.com/AlekSi/gocov-xml
    go get -u gopkg.in/matm/v1/gocov-html
    echo `which go`
    go env
  displayName: 'Set up Golang CI Tools'

- script: |
    make lint
  displayName: 'Run lint'    

- script: |
    mkdir -p junit-report
    go test -v -coverprofile=coverage.txt -covermode count ./pkg/...  ./cmd/... 2>&1 | go-junit-report > junit-report/report.xml
    gocov convert coverage.txt > coverage.json
    gocov-xml < coverage.json > coverage.xml
    mkdir coverage
    gocov-html < coverage.json > coverage/index.html
  displayName: 'Run Tests'

- task: PublishTestResults@2
  inputs:
    testRunner: JUnit
    testResultsFiles: $(System.DefaultWorkingDirectory)/junit-report/report.xml

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura 
    summaryFileLocation: $(System.DefaultWorkingDirectory)/**/coverage.xml
    reportDirectory: $(System.DefaultWorkingDirectory)/**/coverage
